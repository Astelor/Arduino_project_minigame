/* 
 * Project_minigameV2.ino is coded by Astelor
 * CodeSource.txt is coded by 吳捷宇 
 * MiniGame.cpp is a modification of CodeSouce, modified by Astelor
 * 
 * This picture was here for emotional support
 * https://cdn.frankerfacez.com/emoticon/335816/2
 * 
 * NOTE:
 * This project was coded using vscode, 
 * the compatibility with Arduino IDE has yet to be tested.
 */

#include <LedControl.h>
#include <Keypad.h>
#include "keys_config.h"
#include "MiniGame.h"
#include "pitches.h"

/*initialize keypad*/ 
Keypad mykeypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );
/*initialize led monitor*/
int dataPin=12,clkPin=10,csPin=11;
LedControl monitor=LedControl(dataPin,clkPin,csPin,1);
/*initilize minigame*/
MiniGame nAnB;

/* 
 * Helper functions:
 * Integration of Keypad & LedControl
 */

/*User input from myKeypad*/
char userInput[7]={};
/*The digits of userInput, from 1~8, 0 = no avalible input*/
int displayCount=0;
/*Input digit Cap, from 1~8*/
int userInCap=4;
/*Display the value in userInput
 * type:
 * 1= set of 4, use char* result
 * 2= userInput
 */
void userDisplay(int type=2,char *result="x"){
    switch (type)
    {
    case 1:
        for(int i=0;i<4;i++){
        monitor.setChar(0,abs(i-7),result[i],false);
        }
        break;
    case 2:
        for(int i=0;i<displayCount;i++){
            monitor.setChar(0,abs(i-7),userInput[i],false);
        }
        break;
    default:
        break;
    }
}
/*
 * Clear displayCount and userInput
 * type:
 * 1=default, no clearDisplay
 * 0=clearDisplay
*/
void userDisClear(int type =1){
    switch (type)
    {
    case 0:
        displayCount=0;
        userInput[7]={};
        monitor.clearDisplay(0);
        break;
    case 1:
        displayCount=0;
        userInput[7]={};
        break;
    default:
        break;
    }
    
}
/*Delete the value by 1*/
void userDisDel(){
    if(displayCount!=0){
        userInput[displayCount]={};
            displayCount--;
        monitor.clearDisplay(0);
        userDisplay(2);
    }
}
/*Custom menu display*/
void menuDisplay(){
    for(int i=0;i<8;i++){
        monitor.setLed(0,i,1,true);
        monitor.setLed(0,i,4,true);
    }
    monitor.setLed(0,0,2,true);
    monitor.setLed(0,0,3,true);
    monitor.setLed(0,7,6,true);
    monitor.setLed(0,7,5,true);
}

/*
 * Main Code
 */
void setup(){
	Serial.begin(9600);
    monitor.shutdown(0,false);
    monitor.setIntensity(0,8);
    monitor.clearDisplay(0);
}

bool newGame=true;
/*0~3,A~D*/
int gameMode=0;
void loop(){
	char key = mykeypad.getKey();
    if(newGame){
        menuDisplay();
        if(key=='A'){
            /*press A to play*/
            gameMode=0;
            userDisClear(0);
            nAnB.generateKey();
            Serial.println(nAnB.getAnsKey());
            newGame=false;
        }
    }
    else{if(key){
        Serial.println(key);
        if(key=='*'){
            /*delete one input*/
            userDisDel();
        }
        else if(key=='A'){
            /*Show answerKey, then back to menu*/
            char* temp;
            temp=nAnB.getAnsKey();
            userDisplay(1,temp);
            Serial.println(temp);
            delay(1000);
            userDisClear(0);
            newGame=true;
        }
        else if(key=='#'){
            /*Commit answer*/
            if(displayCount==4){
                monitor.clearDisplay(0);
                char* temp;
                temp=nAnB.commitAnswer(userInput);
                userDisplay(1,temp);    //display the ABs
                userDisClear();     //clear userInput
                if(temp[0]=='4'){
                    delay(1000);
                    monitor.clearDisplay(0);
                    newGame=true;
                }
            }
        }
        else if(key!='A'||key!='B'||key!='C'||key!='D'){
            if(displayCount!=userInCap){
                if(displayCount==0){
                    monitor.clearDisplay(0);
                }
                userInput[displayCount]=key;
                displayCount++;
                userDisplay(2);
            }
        }
    }}
}
